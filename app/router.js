'use strict';
module.exports = app => {
  const { router, controller } = app;
  router.get('/', controller.admin.home);
  router.post('/mock/api/url/swagger', controller.urlManage.swaggerUrlList);
  router.post('/mock/api/url/delete', controller.urlManage.delete);
  router.post('/mock/api/url/update', controller.urlManage.update);
  router.post('/mock/api/url/batch/delete', controller.urlManage.batchDelete);
  router.post('/mock/api/url/request/target/switch', controller.urlManage.requestTargetSwitch);
  router.get('/mock/api/url/list', controller.urlManage.list);
  router.post('/mock/api/url/add/by/hand', controller.urlManage.urlAddByHand);
  router.post('/mock/api/url/mock/data', controller.urlResponseManage.mockData);
  router.get('/mock/api/url/response/list', controller.urlResponseManage.getUrlResponseList);
  router.get('/mock/api/url/response/by/params', controller.urlResponseManage.getUrlResponseByParams);
  router.post('/mock/api/url/response/edit', controller.urlResponseManage.editUrlResponse);
  router.post('/mock/api/url/response/set/priority', controller.urlResponseManage.setPriority);
  router.post('/mock/api/url/response/add', controller.urlResponseManage.add);
  router.get('/mock/api/system/list', controller.systemManage.list);
  router.post('/mock/api/system/add', controller.systemManage.add);
  router.post('/mock/api/system/update', controller.systemManage.update);
  router.post('/mock/api/system/add/ipaddress', controller.systemManage.addIpAddress);
  router.post('/mock/api/system/swagger/api/reload', controller.systemManage.reloadSwaggerAPI);
  router.post('/mock/api/system/delete', controller.systemManage.delete);
  router.post('/mock/api/system/enable', controller.systemManage.enableSwitch);
  router.get('/mock(/.+)?', controller.admin.notFound);
  router.post('/model/file/analyse', controller.fileManage.analyse);
  router.get(/([a-z]+)/, controller.urlForward.forward);
  router.options(/([a-z]+)/, controller.urlForward.forward);
  router.post(/([a-z]+)/, controller.urlForward.forward);
};